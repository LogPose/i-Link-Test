{"version":3,"sources":["Components/AddNewExampleWindow.tsx","Components/SolutionWindow.tsx","Components/TaskWindow.tsx","Components/WordsWindow.tsx","App.tsx","index.tsx"],"names":["AddNewExampleWindow","styled","div","NewTextArea","textarea","ConfirmNewExampleButton","button","DeclineNewExampleButton","NewAddNewExampleWindow","newTermRus","newTermEng","mistake","termEngHandler","termRusHandler","addNewExample","cancelAddingNewExample","value","onChange","maxLength","placeholder","onClick","SolutionWindow","Words","ResetButton","NewSolutionWindow","dragOverHandler","dragOverWordHandler","dropHandler","wordSortHandler","resetHandler","dragHandler","thatsAllFolks","solution","onDragOver","onDrop","disabled","length","map","sol","draggable","onDrag","event","id","TaskWindow","ScipButton","NewTaskWindow","currentExample","onSkip","rus","WordsWindow","NewWordsWindow","backDropHandler","solutionWords","ex","AppWindow","ConfirmButton","AddNewExampleButton","animationForAnswerWindow","keyframes","NoAnswerWindow","WrongAnswerWindow","CorrectAnswerWindow","App","useState","eng","examples","setExamples","setCurrentExample","answerStatus","setAnswerStatus","setSolution","hoveredWord","setHoveredWord","setSolutionWords","currentWord","setCurrentWord","setThatsAllFolks","setNewTermRus","setNewTermEng","counter","setCounter","visible","setVisible","setMistake","useEffect","Math","floor","random","count","split","el","sort","a","b","setTimeout","prev","word","preventDefault","stopPropagation","target","newExample","filter","answerSwitch","indexOf","includes","currentWordIndex","slice","currentIndex","splice","dropIndex","hoveredWordIndex","join","toString","utterance","SpeechSynthesisUtterance","voices","window","speechSynthesis","getVoices","voice","speak","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa85b217.chunk.js","sourcesContent":["import React, { ChangeEvent } from \"react\";\nimport styled from \"styled-components\";\n\nconst AddNewExampleWindow = styled.div`\n  width: 400px;\n  height: 500px;\n  background-color: rgb(147, 255, 156);\n  z-index: 2;\n  margin-left: 50%;\n  left: -200px;\n  box-shadow: 0px 0px 20px rgb(27, 138, 92);\n  border-radius: 30px;\n  position: absolute;\n  box-sizing: border-box;\n`;\n\nconst NewTextArea = styled.textarea`\n  width: 350px;\n  height: 170px;\n  resize: none;\n  outline: none;\n  border: 2px rgba(7, 116, 31, 0.9) solid;\n  margin-top: 20px;\n`;\n\nconst ConfirmNewExampleButton = styled.button`\n  width: 180px;\n  height: 50px;\n  background-color: #ccc;\n  margin: 10px;\n  border-radius: 50px;\n  outline: none;\n  border: none;\n  :hover {\n    background-color: rgba(103, 236, 91, 0.801);\n  }\n  :active {\n    background-color: rgba(43, 211, 28, 0.801);\n  }\n`;\n\nconst DeclineNewExampleButton = styled.button`\n  width: 180px;\n  height: 50px;\n  background-color: #ccc;\n  margin: 10px;\n  border-radius: 50px;\n  outline: none;\n  border: none;\n  :hover {\n    background-color: rgba(240, 87, 87, 0.801);\n  }\n  :active {\n    background-color: rgba(221, 25, 25, 0.801);\n  }\n`;\n\ntype AddNewExampleWindowProps = {\n  mistake: boolean;\n  newTermRus: string;\n  newTermEng: string;\n  termRusHandler(event: ChangeEvent): void;\n  termEngHandler(event: ChangeEvent): void;\n  addNewExample(): void;\n  cancelAddingNewExample(): void;\n};\n\nconst NewAddNewExampleWindow: React.FC<AddNewExampleWindowProps> = ({\n  newTermRus,\n  newTermEng,\n  mistake,\n  termEngHandler,\n  termRusHandler,\n  addNewExample,\n  cancelAddingNewExample,\n}) => {\n  return (\n    <AddNewExampleWindow>\n      <NewTextArea\n        value={newTermRus}\n        onChange={termRusHandler}\n        maxLength={150}\n        placeholder=\"Введите предложение на русском (не более 150 символов)\"\n      ></NewTextArea>\n      <NewTextArea\n        value={newTermEng}\n        onChange={termEngHandler}\n        maxLength={150}\n        placeholder=\"Введите перевод (желательно точный) предложения на английском (не более 150 символов)\"\n      ></NewTextArea>\n      <ConfirmNewExampleButton onClick={addNewExample}>\n        {mistake ? \"Заполните поля!\" : \"Добавить\"}\n      </ConfirmNewExampleButton>\n      <DeclineNewExampleButton onClick={cancelAddingNewExample}>\n        Отмена\n      </DeclineNewExampleButton>\n    </AddNewExampleWindow>\n  );\n};\n\nexport default NewAddNewExampleWindow;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SolutionWindow = styled.div`\n  width: 360px;\n  height: 125px;\n  background-color: rgba(145, 255, 255, 0.6);\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  border-radius: 10px;\n  position: relative;\n  box-sizing: border-box;\n`;\n\nconst Words = styled.div`\n  position: relative;\n  width: 80px;\n  height: 20px;\n  background-color: #fff;\n  display: inline-block;\n  margin: 5px;\n  cursor: grab;\n  border-radius: 5px;\n  text-align: center;\n  :hover {\n    background-color: rgba(119, 239, 255, 0.651);\n  }\n  :active {\n    background-color: rgba(1, 225, 255, 0.651);\n  }\n`;\n\nconst ResetButton = styled.button`\n  position: absolute;\n  width: 50px;\n  height: 20px;\n  background-color: rgba(143, 79, 79, 0.329);\n  top: -5px;\n  right: -15px;\n  border-radius: 50px;\n  outline: none;\n  border: none;\n  :hover {\n    background-color: rgba(240, 87, 87, 0.801);\n  }\n  :active {\n    background-color: rgba(221, 25, 25, 0.801);\n  }\n`;\n\ntype NewSolutionWindowProps = {\n  dragOverHandler(event: React.DragEvent<Element>): void;\n  dropHandler(event: React.DragEvent<Element>): void;\n  wordSortHandler(event: React.DragEvent<Element>): void;\n  dragOverWordHandler(event: React.DragEvent<Element>, sol: {}): void;\n  resetHandler(): void;\n  dragHandler(sol: {}): void;\n  thatsAllFolks: boolean;\n  solution: { value: string; id: number }[];\n};\n\nconst NewSolutionWindow: React.FC<NewSolutionWindowProps> = ({\n  dragOverHandler,\n  dragOverWordHandler,\n  dropHandler,\n  wordSortHandler,\n  resetHandler,\n  dragHandler,\n  thatsAllFolks,\n  solution,\n}) => {\n  return (\n    <SolutionWindow onDragOver={dragOverHandler} onDrop={dropHandler}>\n      <ResetButton\n        disabled={thatsAllFolks || solution.length === 0}\n        onClick={resetHandler}\n      >\n        Reset\n      </ResetButton>\n      {solution.map((sol) => (\n        <Words\n          draggable={true}\n          key={sol.id}\n          onDrop={wordSortHandler}\n          onDrag={() => dragHandler(sol)}\n          onDragOver={(event) => dragOverWordHandler(event, sol)}\n        >\n          {sol.value}\n        </Words>\n      ))}\n    </SolutionWindow>\n  );\n};\n\nexport default NewSolutionWindow;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TaskWindow = styled.div`\n  width: 360px;\n  height: 100px;\n  background-color: rgba(153, 255, 255, 0.774);\n  margin: 10px auto;\n  font-size: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  border-radius: 10px;\n  box-sizing: border-box;\n`;\n\nconst ScipButton = styled.button`\n  position: absolute;\n  width: 50px;\n  height: 20px;\n  background-color: rgba(143, 79, 79, 0.329);\n  top: 55px;\n  right: 5px;\n  border-radius: 50px;\n  outline: none;\n  border: none;\n  :hover {\n    background-color: rgba(240, 87, 87, 0.801);\n  }\n  :active {\n    background-color: rgba(221, 25, 25, 0.801);\n  }\n`;\n\ntype TaskWindowProps = {\n  thatsAllFolks: boolean;\n  currentExample: { id: number; rus: string; eng: string };\n  onSkip(): void;\n};\n\nconst NewTaskWindow: React.FC<TaskWindowProps> = ({\n  thatsAllFolks,\n  currentExample,\n  onSkip,\n}) => {\n  return (\n    <TaskWindow>\n      {thatsAllFolks ? (\n        <p>Задания закончились! Спасибо за участие!</p>\n      ) : (\n        currentExample.rus\n      )}\n      <ScipButton disabled={thatsAllFolks ? true : false} onClick={onSkip}>\n        Skip\n      </ScipButton>\n    </TaskWindow>\n  );\n};\n\nexport default NewTaskWindow;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport FlipMove from \"react-flip-move\";\n\nconst Words = styled.div`\n  position: relative;\n  width: 80px;\n  height: 20px;\n  background-color: #fff;\n  display: inline-block;\n  margin: 5px;\n  cursor: grab;\n  border-radius: 5px;\n  text-align: center;\n  :hover {\n    background-color: rgba(119, 239, 255, 0.651);\n  }\n  :active {\n    background-color: rgba(1, 225, 255, 0.651);\n  }\n`;\n\nconst WordsWindow = styled.div`\n  width: 360px;\n  height: 125px;\n  background-color: rgba(153, 197, 255, 0.774);\n  margin: 10px auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  border-radius: 10px;\n  position: relative;\n  box-sizing: border-box;\n`;\n\ntype newWordsWindowProps = {\n  dragOverWordHandler(event: React.DragEvent<Element>, sol: {}): void;\n  dragOverHandler(event: React.DragEvent<Element>): void;\n  backDropHandler(event: React.DragEvent<Element>): void;\n  dragHandler(ex: {}): void;\n  solutionWords: { value: string; id: number }[];\n};\n\nconst NewWordsWindow: React.FC<newWordsWindowProps> = ({\n  dragHandler,\n  dragOverHandler,\n  backDropHandler,\n  dragOverWordHandler,\n  solutionWords,\n}) => {\n  return (\n    <WordsWindow onDragOver={dragOverHandler} onDrop={backDropHandler}>\n      <FlipMove>\n        {solutionWords.map((ex) => {\n          return (\n            <Words\n              key={ex.id}\n              draggable={true}\n              onDrag={() => dragHandler(ex)}\n              onDragOver={(event) => dragOverWordHandler(event, ex)}\n            >\n              {ex.value}\n            </Words>\n          );\n        })}\n      </FlipMove>\n    </WordsWindow>\n  );\n};\n\nexport default NewWordsWindow;\n","import React, { ChangeEvent, DragEvent, useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport NewAddNewExampleWindow from \"./Components/AddNewExampleWindow\";\nimport NewSolutionWindow from \"./Components/SolutionWindow\";\nimport NewTaskWindow from \"./Components/TaskWindow\";\nimport NewWordsWindow from \"./Components/WordsWindow\";\n\nconst AppWindow = styled.div`\n  width: 400px;\n  height: 500px;\n  background-color: #fff;\n  margin-top: 20px;\n  margin-left: 50%;\n  left: -200px;\n  border-radius: 50px;\n  position: relative;\n  box-sizing: border-box;\n  text-align: center;\n`;\n\nconst ConfirmButton = styled.button`\n  width: 150px;\n  height: 50px;\n  background-color: #ccc;\n  margin: 0 10px;\n  border-radius: 50px;\n  outline: none;\n  border: none;\n  :hover {\n    background-color: rgba(126, 186, 255, 0.774);\n  }\n  :active {\n    background-color: rgba(96, 170, 255, 0.932);\n  }\n  font-family: \"TaskFont\";\n`;\n\nconst AddNewExampleButton = styled.button`\n  width: 150px;\n  height: 50px;\n  background-color: #ccc;\n  margin: 0 10px;\n  border-radius: 50px;\n  outline: none;\n  border: none;\n  :hover {\n    background-color: rgba(255, 253, 117, 0.726);\n  }\n  :active {\n    background-color: rgba(255, 251, 23, 0.726);\n  }\n  font-family: \"TaskFont\";\n`;\n\nconst animationForAnswerWindow = keyframes`\nfrom {\n  opacity: 0;\n  margin-top: -150px;\n}\nto {\n  opacity: 0;\n  margin-top: 150px;\n}\n50% {\n  opacity: 1;\n  margin-top: 10px;\n}\n`;\n\nconst NoAnswerWindow = styled.div`\n  width: 300px;\n  height: 100px;\n  background-color: rgba(66, 226, 213, 0.8);\n  font-size: 15px;\n  color: #fff;\n  display: flex;\n  margin-top: 10px;\n  left: 50px;\n  z-index: 2;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  box-sizing: border-box;\n  border-radius: 40px;\n  position: absolute;\n  animation: ${animationForAnswerWindow} 3s forwards;\n  opacity: 0;\n`;\n\nconst WrongAnswerWindow = styled(NoAnswerWindow)`\n  background-color: rgba(206, 76, 76, 0.8);\n  color: rgb(110, 11, 11);\n  font-size: 15px;\n`;\n\nconst CorrectAnswerWindow = styled(NoAnswerWindow)`\n  background-color: rgba(75, 221, 55, 0.8);\n  color: rgb(18, 94, 8);\n`;\n\nfunction App() {\n  const [examples, setExamples] = useState([\n    {\n      id: 1,\n      rus: \"Вчера сегодня было завтра\",\n      eng: \"Yesterday today was tomorrow\",\n    },\n    {\n      id: 2,\n      rus: \"Рафик сто процентов не виноват\",\n      eng: \"Rafik is not one hundred percent to blame\",\n    },\n    {\n      id: 3,\n      rus: \"Безумно можно быть первым\",\n      eng: \"Its crazy to be the first\",\n    },\n    {\n      id: 4,\n      rus: \"Весь мир в труху - но потом\",\n      eng: \"The whole world is in dust - but then\",\n    },\n    {\n      id: 5,\n      rus: \"У меня плохое предчувствие об этом\",\n      eng: \"I have a bad feeling about this\",\n    },\n    {\n      id: 6,\n      rus: \"А потом назвали меня как тот самолёт, который был турецкий\",\n      eng: \"And then they named me like that plane, which was Turkish\",\n    },\n    {\n      id: 7,\n      rus: \"Война. Война никогда не меняется\",\n      eng: \"War. War never changes\",\n    },\n  ]);\n\n  const [currentExample, setCurrentExample] = useState<{\n    id: number;\n    rus: string;\n    eng: string;\n  }>({ id: 0, rus: \"\", eng: \"\" });\n\n  const [answerStatus, setAnswerStatus] = useState<string>(\"\");\n\n  const [solution, setSolution] = useState<{ value: string; id: number }[]>([]);\n\n  const [hoveredWord, setHoveredWord] = useState<{ value: string; id: number }>(\n    { value: \"\", id: 0 }\n  );\n\n  const [solutionWords, setSolutionWords] = useState<\n    { value: string; id: number }[]\n  >([]);\n\n  const [currentWord, setCurrentWord] = useState<{ value: string; id: number }>(\n    { value: \"\", id: 0 }\n  );\n\n  const [thatsAllFolks, setThatsAllFolks] = useState<boolean>(false);\n\n  const [newTermRus, setNewTermRus] = useState<string>(\"\");\n\n  const [newTermEng, setNewTermEng] = useState<string>(\"\");\n\n  const [counter, setCounter] = useState<number>(100);\n\n  const [visible, setVisible] = useState<boolean>(false);\n\n  const [mistake, setMistake] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (examples.length !== 0) {\n      setCurrentExample(examples[Math.floor(Math.random() * examples.length)]);\n    } else {\n      setThatsAllFolks(true);\n      setSolutionWords([]);\n    }\n  }, [examples]);\n  useEffect(() => {\n    let count = 1000;\n    const uniqueIdCounter = () => {\n      count = count + 1;\n      return count;\n    };\n    setSolutionWords(\n      currentExample.eng\n        .split(\" \")\n        .map((el) => {\n          return { value: el, id: uniqueIdCounter() };\n        })\n        .sort(function compareFunction(a, b) {\n          if (a.value < b.value) {\n            return -1;\n          }\n          if (a.value > b.value) {\n            return 1;\n          }\n          return 0;\n        })\n    );\n  }, [currentExample]);\n  useEffect(() => {\n    setTimeout(() => {\n      setCounter((prev) => (prev = prev + 1));\n    }, 1000);\n  }, [solutionWords]);\n\n  const dragHandler = (word: { value: string; id: number }) => {\n    setCurrentWord(word);\n  };\n\n  const dragOverHandler = (event: DragEvent) => {\n    event.preventDefault();\n  };\n\n  const dragOverWordHandler = (\n    event: React.DragEvent<Element>,\n    sol: { id: number; value: string }\n  ) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setHoveredWord(sol);\n  };\n\n  const wordSortHandler = (event: DragEvent) => {\n    event.stopPropagation();\n    event.preventDefault();\n    if (solution.includes(currentWord)) {\n      const currentIndex = solution.indexOf(currentWord);\n      solution.splice(currentIndex, 1);\n      const dropIndex = solution.indexOf(hoveredWord);\n      solution.splice(dropIndex + 1, 0, currentWord);\n      setSolution(\n        solution.map((sol) => {\n          return sol;\n        })\n      );\n    } else {\n    }\n  };\n\n  const dropHandler = (event: DragEvent) => {\n    event.stopPropagation();\n    event.preventDefault();\n    if (solution.includes(currentWord) && solutionWords.includes(currentWord)) {\n      setSolution((prev) => [...prev, currentWord]);\n      let currentWordIndex = solutionWords.indexOf(currentWord);\n      setSolutionWords((prev) => [\n        ...prev.slice(0, currentWordIndex),\n        ...prev.slice(currentWordIndex + 1, prev.length),\n      ]);\n    } else if (\n      solution.includes(currentWord) &&\n      !solutionWords.includes(currentWord)\n    ) {\n      return solution;\n    } else {\n      setSolution((prev) => [...prev, currentWord]);\n      let currentWordIndex = solutionWords.indexOf(currentWord);\n      setSolutionWords((prev) => [\n        ...prev.slice(0, currentWordIndex),\n        ...prev.slice(currentWordIndex + 1, prev.length),\n      ]);\n    }\n  };\n\n  const backDropHandler = (event: DragEvent) => {\n    event.stopPropagation();\n    event.preventDefault();\n    if (solutionWords.includes(currentWord) && solution.includes(currentWord)) {\n      let currentWordIndex = solution.indexOf(currentWord);\n      setSolution((prev) => [\n        ...prev.slice(0, currentWordIndex),\n        ...prev.slice(currentWordIndex + 1, prev.length),\n      ]);\n      let hoveredWordIndex = solutionWords.indexOf(hoveredWord);\n      if (!solutionWords.includes(hoveredWord)) {\n        setSolutionWords((prev) => [...prev, currentWord]);\n      } else {\n        setSolutionWords((prev) => [\n          ...prev.slice(0, hoveredWordIndex + 1),\n          currentWord,\n          ...prev.slice(hoveredWordIndex + 1, prev.length),\n        ]);\n      }\n      setTimeout(() => {\n        setSolutionWords((prev) =>\n          prev.sort(function compareFunction(a, b) {\n            if (a.value < b.value) {\n              return -1;\n            }\n            if (a.value > b.value) {\n              return 1;\n            }\n            return 0;\n          })\n        );\n      }, 500);\n    } else if (\n      solutionWords.includes(currentWord) &&\n      !solution.includes(currentWord)\n    ) {\n      return solutionWords;\n    } else {\n      let currentWordIndex = solution.indexOf(currentWord);\n      setSolution((prev) => [\n        ...prev.slice(0, currentWordIndex),\n        ...prev.slice(currentWordIndex + 1, prev.length),\n      ]);\n      let hoveredWordIndex = solutionWords.indexOf(hoveredWord);\n      if (!solutionWords.includes(hoveredWord)) {\n        setSolutionWords((prev) => [...prev, currentWord]);\n      } else {\n        setSolutionWords((prev) => [\n          ...prev.slice(0, hoveredWordIndex + 1),\n          currentWord,\n          ...prev.slice(hoveredWordIndex + 1, prev.length),\n        ]);\n      }\n\n      setTimeout(() => {\n        setSolutionWords((prev) =>\n          prev.sort(function compareFunction(a, b) {\n            if (a.value < b.value) {\n              return -1;\n            }\n            if (a.value > b.value) {\n              return 1;\n            }\n            return 0;\n          })\n        );\n      }, 500);\n    }\n  };\n\n  const checkSolution = () => {\n    if (solution.length === 0) {\n      setAnswerStatus(\"no\");\n      setTimeout(() => {\n        setAnswerStatus(\"\");\n      }, 3000);\n    } else if (\n      solution\n        .map((el) => {\n          return el.value;\n        })\n        .join(\" \")\n        .toString() === currentExample.eng\n    ) {\n      let utterance = new SpeechSynthesisUtterance(currentExample.eng);\n      let voices = window.speechSynthesis.getVoices();\n      utterance.voice = voices[2];\n      speechSynthesis.speak(utterance);\n      setExamples((prev) => prev.filter((ex) => ex.id !== currentExample.id));\n      setSolution([]);\n      setAnswerStatus(\"correct\");\n      setTimeout(() => {\n        setAnswerStatus(\"\");\n      }, 3000);\n    } else {\n      setAnswerStatus(\"wrong\");\n      setTimeout(() => {\n        setAnswerStatus(\"\");\n      }, 3000);\n    }\n  };\n\n  const termRusHandler = (event: ChangeEvent) => {\n    let target = event.target as HTMLInputElement;\n    setNewTermRus(target.value);\n  };\n\n  const termEngHandler = (event: ChangeEvent) => {\n    let target = event.target as HTMLInputElement;\n    setNewTermEng(target.value);\n  };\n\n  const addNewExample = () => {\n    setCounter((prev) => prev + 1);\n    if (newTermRus.length === 0 || newTermEng.length === 0) {\n      setMistake(true);\n      setTimeout(() => {\n        setMistake(false);\n      }, 1000);\n    }\n    if (newTermRus.length !== 0 && newTermEng.length !== 0) {\n      let newExample = { id: counter, rus: newTermRus, eng: newTermEng };\n      setExamples((prev) => [...prev, newExample]);\n      setSolution([]);\n      setVisible(false);\n      setNewTermEng(\"\");\n      setNewTermRus(\"\");\n      setThatsAllFolks(false);\n    }\n  };\n\n  const cancelAddingNewExample = () => {\n    setVisible(false);\n    setNewTermEng(\"\");\n    setNewTermRus(\"\");\n  };\n\n  const skipHandler = () => {\n    setExamples((prev) => prev.filter((ex) => ex.id !== currentExample.id));\n    setSolution([]);\n  };\n\n  const resetHandler = () => {\n    setSolution([]);\n    setSolutionWords(\n      currentExample.eng\n        .split(\" \")\n        .map((el) => {\n          return { value: el, id: currentExample.eng.split(\" \").indexOf(el) };\n        })\n        .sort(function compareFunction(a, b) {\n          if (a.value < b.value) {\n            return -1;\n          }\n          if (a.value > b.value) {\n            return 1;\n          }\n          return 0;\n        })\n    );\n  };\n\n  const visibleHandler = () => {\n    setVisible(true);\n  };\n\n  const answerSwitch = (answerStatus: string) => {\n    switch (answerStatus) {\n      case \"no\":\n        return (\n          <NoAnswerWindow>\n            <h1>Пожалуйста, составьте ответ!</h1>\n          </NoAnswerWindow>\n        );\n      case \"wrong\":\n        return (\n          <WrongAnswerWindow>\n            <h1>Ответ неверный! Попробуйте ещё раз!</h1>\n          </WrongAnswerWindow>\n        );\n      case \"correct\":\n        return (\n          <CorrectAnswerWindow>\n            <h1>Ответ правильный! Отлично!</h1>\n          </CorrectAnswerWindow>\n        );\n    }\n  };\n\n  return (\n    <AppWindow>\n      {visible ? (\n        <NewAddNewExampleWindow\n          mistake={mistake}\n          newTermEng={newTermEng}\n          newTermRus={newTermRus}\n          termRusHandler={termRusHandler}\n          termEngHandler={termEngHandler}\n          addNewExample={addNewExample}\n          cancelAddingNewExample={cancelAddingNewExample}\n        />\n      ) : null}\n      <h3>Переведите данное предложение:</h3>\n      <NewTaskWindow\n        onSkip={skipHandler}\n        currentExample={currentExample}\n        thatsAllFolks={thatsAllFolks}\n      />\n      {answerSwitch(answerStatus)}\n      <NewSolutionWindow\n        thatsAllFolks={thatsAllFolks}\n        solution={solution}\n        resetHandler={resetHandler}\n        dragHandler={dragHandler}\n        dragOverHandler={dragOverHandler}\n        dragOverWordHandler={dragOverWordHandler}\n        dropHandler={dropHandler}\n        wordSortHandler={wordSortHandler}\n      />\n      <NewWordsWindow\n        solutionWords={solutionWords}\n        dragHandler={dragHandler}\n        dragOverHandler={dragOverHandler}\n        backDropHandler={backDropHandler}\n        dragOverWordHandler={dragOverWordHandler}\n      />\n      <ConfirmButton\n        disabled={thatsAllFolks || answerStatus.length !== 0}\n        onClick={checkSolution}\n      >\n        Проверить\n      </ConfirmButton>\n      <AddNewExampleButton onClick={visibleHandler}>\n        Добавить пример\n      </AddNewExampleButton>\n    </AppWindow>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}